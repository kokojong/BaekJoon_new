//
//  main.swift
//  BackJoon
//
//  Created by kokojong on 2023/04/30.
//

import Foundation
// 백준 2193 이친수 dp 실3

// 이친수는 0으로 시작하지 않는다.
// 이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.

// dp로 기획해서 앞에꺼에 뒤가 0이라면 2 더하고 1이라면 1더함

// dp[i] = dp[i-1] + dp[i-2]
// 1 // 0 - 0, 1 - 1
// 10 // 0 -1, 1 - 0
// 100 101 // 1,1
// 1000 1001, 1010 // 2,1
// 10000 10001, 10010, 10100 10101 // 3, 2
// 100000 100001, 100010, 100100 100101, 101000 101001, 101010 // 5, 3
let n = Int(readLine()!)!
var dp: [Int] = []

dp.append(0)
dp.append(1)
if n >= 2 {
    for i in 2...n {
        let v = dp[i-1] + dp[i-2] // 피보나치
        dp.append(v)
    }
}
print(dp[n])

